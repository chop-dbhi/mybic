[uwsgi]

;
; Setup
;

; Change to the specified directory before loading the app. %d is the
; aboslute path of the directory containing this file
chdir = %d/../..

; set the process name to something more meaningful (e.g. "master")
auto-procname = true

; prefix to the process names
procname-prefix = mybic

; set the process to specific uid/gid
uid = devuser
gid = devuser

; allow threads to be spawned in the interpreter
enable-threads = true

; clean up pid and socket files upon exit
vacuum = true

stats = stats.sock


;
; Communication
;

; communication protocol
; protocol = uwsgi

; socket listen queue size. if the queue is full, requests will be rejected
; listen = 100

; bind to the specific socket using default protocol
socket = uwsgi.sock

; socket permissions
chmod-socket = 660

; timeout (in seconds) when reading from the socket
; socket-timeout = 4


;
; Workers
;

; run master mode to manage workers
master = true
master-as-root = true

; worker processes
workers = 8

; reload worker after it has handled this number of requests
max-requests = 5000

; limit the address space a worker has access to in MB
; limit-rss = 256

; reload a worker if the address space exceeds this limit in MB
reload-on-rss = 256

; force the master to reload a worker its address space exceeds the limit
; evil-reload-on-as = 256

; maximum time (in seconds) a worker has to reload/shutdown itself before
; being brutally killed
reload-mercy = 10

; timeout in seconds. requests that take longer than this timeout will be
; dropped and the worker is recycled
harakiri = 600

; log info about the killed request and process
harakiri-verbose = false


;
; Logging
;

; log requests that exceed a response time
log-slow = 5


;
; Python
;

; virtual environment. this is relative to `chdir`
virtualenv = /home/devuser/webapps/mybic-dev-env

; entry point (wsgi file) for the Python application
wsgi-file = wsgi.py
